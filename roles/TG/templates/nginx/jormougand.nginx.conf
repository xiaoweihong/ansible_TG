server {
        listen 80 default_server;
        listen [::]:80 default_server ipv6only=on;
        listen 443 ssl;
        listen [::]:443 ipv6only=on;
#        ssl_certificate     /home/ubuntu/platformTG/jormougand/latest/cert/cert.crt;
#        ssl_certificate_key /home/ubuntu/platformTG/jormougand/latest/cert/cert.key;

        root   /home/{{ansible_user}}/platformTG/jormougand/latest/;
        index index.html index.htm;

        # Make site accessible from http://localhost/
        server_name localhost;
        gzip on;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml text/javascript application/javascript;

        client_max_body_size 1024M;

        location / {
                override_charset on;
                charset_types text/css;
                charset utf-8;
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri.html /index.html;
                # Uncomment to enable naxsi on this location
                # include /etc/nginx/naxsi.rules
        }

        location /cert/ {
                return 404;
        }

        location /proxy/loki/  {
          proxy_set_header X-Real-IP $remote_addr; # 存放用户的真实ip
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 每经过一个反向代理，就会把反向代理IP存放在X-Forwarded-
                proxy_pass http://127.0.0.1:3000/;
        }


        location /proxy/croatia/  {
          proxy_set_header X-Real-IP $remote_addr; # 存放用户的真实ip
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 每经过一个反向代理，就会把反向代理IP存放在X-Forwarded-F
                proxy_pass http://127.0.0.1:1314/;
        }

        location /platformData/ {
                root /;
                sendfile   on;
        }


        location /proxy/k2s/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Proxy "";
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://127.0.0.1:8082/;
        }

        location /proxy/iris/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Proxy "";
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://127.0.0.1:8083/;
        }

        location /proxy {
            proxy_set_header X-Real-IP $remote_addr; # 存放用户的真实ip
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 每经过一个反向代理，就会把反向代理IP存放在X-Forwarded-F
            proxy_intercept_errors on;
            if ($request_uri ~* "url=(.*)") {
                proxy_pass $1;
                error_page 301 302 307 = @handle_redirects;
            }
        }

        location @handle_redirects {
            proxy_set_header X-Real-IP $remote_addr; # 存放用户的真实ip
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 每经过一个反向代理，就会把反向代理IP存放在X-Forwarded-F
            set $saved_redirect_location '$upstream_http_location';
            proxy_pass $saved_redirect_location;
        }
}
